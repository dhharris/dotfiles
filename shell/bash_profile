# Set vim mode
set -o vi

# Use tmux by default on local connections
if command -v tmux>/dev/null ; then
    if  [ ! "$SSH_CONNECTION" ]; then
        [[ ! $TERM =~ screen ]] && [ -z "$TMUX" ] && exec tmux -u
    fi
fi

# Append to history file
shopt -s histappend

# Use one command per line
shopt -s cmdhist

# Check window size after each command
shopt -s checkwinsize

# Allow a larger history file
HISTSIZE=130000
HISTFILESIZE=-1

# Don't store specific lines
HISTCONTROL=ignoreboth
HISTIGNORE='ls:bg:fg:history'

# Record timestamps
HISTTIMEFORMAT='%F %T '

# Store history immediately
PROMPT_COMMAND='history -a'

# Allow 256 bits of color 
export TERM=xterm-256color

# Restore terminal colors
alias reset_colors='tput sgr0'

# Easy mysql startup
alias mysql='/usr/local/mysql/bin/mysql'

# sshh command for tmux
alias sshh='$HOME/.sshh/sshh'

# Set default editor to vim 
export EDITOR=vim

# Configure less
# -X leaves file contents on the screen when less exits (saves to tmux)
# -R enables colors
# -F makes less quit if the entire output can be displayed
export LESS='-XRF'

# Set default C compiler (Clang if available)
command -v clang >/dev/null 2>&1 && export CC=clang

# Change bash PS1 prompt
# See http://bashrcgenerator.com/
export PS1="[\u@\h \W]\\$ \[$(tput sgr0)\]"

# Improve ls with colors, etc
export CLICOLOR=1
export LSCOLORS="ExGxBxDxCxEgEdxbxgxcxd"

# Make grep use colors by default
export GREP_OPTIONS='--color=auto'

# Load other configs for MacOS
if [[ "$OSTYPE" == "darwin"* ]] && [ -f ~/dotfiles/shell/bash_profile_macos ]; then
    source ~/dotfiles/shell/bash_profile_macos
fi

if [ -f $HOME/dotfiles/tmux/completion.sh ]; then
    source $HOME/dotfiles/tmux/completion.sh
fi
    
# FB Specific Configs
if [ -f ~/bash_profile_fb.sh ]; then
    source ~/bash_profile_fb.sh
fi
#CHEF.NO.SOURCE

# Make vim the default if it is installed
if [ -x "$(command -v vim)" ]; then
    alias vi=vim
fi

# PATH Updates
export PATH="/usr/local/opt/llvm/bin:$PATH"
export PATH="/usr/local/sbin:/usr/local/bin:$PATH"
export PATH="$HOME/Library/Python/3.7/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/scripts:$PATH"

# cowspeak "art"
export COWPATH="$COWPATH:$HOME/.cowsay"

# Configure pyenv - placed near end since it also manipulates PATH
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

####################
# Helper functions
####################

# Get confirmation from the user before executing a command
# Can be used like `confirm && echo "confirmed"`
confirm() {
    local prompt="$1"
    read -r -p "${prompt:-Are you sure? [y/N]} " response
    case "$response" in
        [yY][eE][sS]|[yY])
            true
            ;;
        *)
            false
            ;;
    esac
}

# Takes a path argument and returns it as an absolute path.
# No-op if the path is already absolute.
to_abs_path() {
    local target="$1"

    if [ "$target" == "." ]; then
        echo "$(pwd)"
    elif [ "$target" == ".." ]; then
        echo "$(dirname "$(pwd)")"
    else
        echo "$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
    fi
}
